{"version":3,"sources":["logo.svg","Components/SelectionList/hooks.js","Components/SelectionList/SelectionList.js","Components/SelectionList/index.js","Components/Autocomplete/Autocomplete.js","Components/Autocomplete/index.js","Components/Autocomplete/hooks.js","Components/react-fullslide/lethargy.js","Components/react-fullslide/effects.js","Components/react-fullslide/FadeContainer.js","Components/react-fullslide/LoadingSpinners/Spinner.js","Components/react-fullslide/Section.js","Components/react-fullslide/Slider.js","serviceWorker.js","index.js","App.js"],"names":["module","exports","useKeyPress","targetKey","useState","keyPressed","setKeyPressed","downHandler","e","key","upHandler","useEffect","window","addEventListener","removeEventListener","ListItem","item","isActive","isSelected","setSelected","setHovered","exposeRef","ref","useRef","className","onClick","onMouseEnter","onMouseLeave","undefined","name","description","SelectionList","items","shouldDisplay","inputRef","listRef","id","selected","cursor","setCursor","hovered","downPress","upPress","enterPress","length","prevState","indexOf","current","focus","useArrowNavigation","selectedItem","scrollCursorIndex","onWheel","stopPropagation","map","i","fetchPredictions","handlePredictions","queryStr","a","fetch","json","then","res","predictions","err","Autocomplete","themeClass","refs","new_ref","includes","push","useManyRefs","listItemRefs","collectListItemRef","listDisplay","setListDisplay","useLayoutEffect","handleClick","listItems","clickedInput","target","clickedListItem","document","useSmartListDisplay","setPredictions","onFocus","placeholder","type","onChange","value","Lethargy","stability","sensitivity","tolerance","delay","this","Math","abs","lastUpDeltas","results","call","lastDownDeltas","deltasTimestamp","prototype","check","lastDelta","originalEvent","wheelDelta","deltaY","detail","Date","now","shift","isInertia","direction","lastDeltas","lastDeltasNew","lastDeltasOld","newAverage","newSum","oldAverage","oldSum","slice","reduce","t","s","showLastUpDeltas","showLastDownDeltas","PASSIVE_SUPPORTED","opts","Object","defineProperty","get","console","error","checkSupportsPassive","useResize","props","status","setStyles","orientation","windowMeasure","innerHeight","innerWidth","dim","resize","sideSize","previousSize","sideDisplacement","translateStr","curPage","transition","transform","resetLinearTranslate","styleApplicator","containerRef","style","keys","forEach","useTouchEvent","changePage","localstatus","reqAnim","touchStartPos","touchMoveDelta","swipeSensitivity","_","preventSwipe","touchSwipePhase","disabled","touchEnabled","isAnimating","isInSwipe","parentAnimating","parentStatus","animate","translate","forceCheck","updateTouchMove","requestAnimationFrame","onTouchStart","touches","clientY","clientX","onTouchMove","newDelta","changedTouches","onTouchEnd","cancelAnimationFrame","delta","log","duration","transDuration","maxPage","SOURCES","TOUCH","childStatus","handleSwipeEnd","passive","useChangePage","enableTransition","pageSelector","source","easing","p_S","nextPage","turning","is","layoutIndex","inView","prevent_child_PageChange","allowPrev","allowNext","increaseNotAllowed","stopPageTurn","childSliderInView","childSliderIndices","childSliderAnimating","WHEEL","prevent_NextPage","decreaseNotAllowed","prevent_PrevPage","onBeforeScroll","updateNavDots","React","Component","fadeIn","keyframes","fadeOut","Fade","styled","div","out","ExpandingLoadingSpinner","SpinnerContainer","Section","section","ScrollSlide","Slide","children","Eager","Lazy","unmountIfInvisible","overflow","offset","once","useMemo","lazy","defaultProps","ontouchmove","ev","preventDefault","BUTTON","Slider","containerEl","initialPage","acc","child","SubSlider","concat","styleSetter","dur","ea","handleTransitionEnd","onAfterScroll","lethargy","prevTime","getTime","scrollings","wheelEnabled","curTime","dt","arr","scrolling","useWheelEvent","buttonIds","onButtonClick","to","attributes","isNaN","parseInt","button","getElementById","useButtonEvents","activated_children","Children","toArray","cloneElement","horizontalTranslate","position","top","onTransitionEnd","width","height","showNavDots","color","navDotColor","pos","navDotPos","Buttons","buttons","show","showButtons","NavigationDots","navDotRefs","Array","fill","createRef","navDotStyleSetters","refObj","prevPage","border","NavDot","active","Dot","forwardRef","NavDotContainer","adaptiveStyle","flexDirection","right","left","bottom","zIndex","fontSize","display","alignContent","alignItems","Boolean","location","hostname","match","ReactDOM","render","background","flex","justifyContent","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.541bf638.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useEffect, useState } from 'react'\r\n\r\nexport const useKeyPress = function(targetKey) {\r\n    const [keyPressed, setKeyPressed] = useState(false);\r\n\r\n    function downHandler(e) {\r\n      if (e.key === targetKey) {\r\n        setKeyPressed(true);\r\n      }\r\n    }\r\n    const upHandler = (e) => {\r\n      if (e.key === targetKey) {\r\n        setKeyPressed(false);\r\n      }\r\n    };\r\n\r\n    useEffect(() => {\r\n      window.addEventListener(\"keydown\", downHandler);\r\n      window.addEventListener(\"keyup\", upHandler);\r\n\r\n      return () => {\r\n        window.removeEventListener(\"keydown\", downHandler);\r\n        window.removeEventListener(\"keyup\", upHandler);\r\n      };\r\n    });\r\n\r\n    return keyPressed;\r\n  };\r\n\r\n\r\nexport const useArrowNavigation = (items, inputRef) => {\r\n  const [selected, setSelected] = useState({id: null, name: null});\r\n  const [cursor, setCursor] = useState(0);\r\n  const [hovered, setHovered] = useState(undefined);\r\n\r\n  const downPress = useKeyPress(\"ArrowDown\");\r\n  const upPress = useKeyPress(\"ArrowUp\");\r\n  const enterPress = useKeyPress(\"Enter\");\r\n\r\n  useEffect(() => {\r\n      if (items.length && downPress) {\r\n      setCursor(prevState =>\r\n          prevState < items.length - 1 ? prevState + 1 : prevState\r\n      );\r\n      }\r\n  }, [downPress]);\r\n\r\n  useEffect(() => {\r\n      if (items.length && upPress) {\r\n          setCursor(prevState => (prevState > 0 ? prevState - 1 : prevState));\r\n      }\r\n  }, [upPress]);\r\n\r\n  useEffect(() => {\r\n      if (items.length && enterPress) {\r\n          setSelected(items[cursor]);\r\n      }\r\n  }, [cursor, enterPress]);\r\n\r\n  useEffect(() => {\r\n      if (items.length && hovered) {\r\n          setCursor(items.indexOf(hovered));\r\n      }\r\n  }, [hovered]);\r\n\r\n  useEffect(() => {\r\n    if ( !enterPress && !upPress && !downPress) {\r\n      if (inputRef) inputRef.current.focus();\r\n    }\r\n  }, [])\r\n\r\n  return [selected, cursor, setSelected, setHovered]\r\n}","import React, { useState, useEffect, useRef } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { useArrowNavigation } from './hooks'\r\nimport './SelectionList.css'\r\n\r\n\r\nexport default function SelectionList ({items, shouldDisplay, inputRef, exposeRef }) {\r\n    const listRef = useRef(null);\r\n    const [\r\n        selectedItem,\r\n        scrollCursorIndex,\r\n        setSelected,\r\n        setHovered\r\n    ] = useArrowNavigation(items, inputRef)\r\n    return (\r\n        <div\r\n            ref={listRef}\r\n            className={`selectionList`}\r\n            onWheel={e => e.stopPropagation()}\r\n        >\r\n            <div\r\n                className={`${(shouldDisplay) ? 'show' : 'hide'}`}\r\n            >\r\n                    {\r\n                        items.map((item, i) => (\r\n                            <ListItem\r\n                                key={item.id}\r\n                                isActive={i === scrollCursorIndex}\r\n                                isSelected={selectedItem.name === item.name}\r\n                                item={item}\r\n                                setSelected={setSelected}\r\n                                setHovered={setHovered}\r\n                                onClick={(e) => {\r\n                                    inputRef.current.focus()\r\n                                }}\r\n                                exposeRef={exposeRef}\r\n                            />\r\n                        ))\r\n                    }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ListItem = ({ item, isActive, isSelected, setSelected, setHovered, exposeRef }) => {\r\n    const ref = useRef(null)\r\n    exposeRef(ref)\r\n    return (\r\n        <div\r\n            className={`item ${isActive ? \"active\" : \"\"} ${isSelected ? \"selected\" : \"\"}`}\r\n            onClick={() => setSelected(item)}\r\n            onMouseEnter={() => setHovered(item)}\r\n            onMouseLeave={() => setHovered(undefined)}\r\n            ref={ref}\r\n        >\r\n            <span className=\"name\">{item.name}</span>\r\n            <span className=\"description\">{item.description}</span>\r\n        </div>\r\n    );\r\n}","import SelectionList from './SelectionList'\r\n\r\nexport default SelectionList;","import React, { useState, useRef } from 'react'\r\nimport { useManyRefs, useSmartListDisplay } from './hooks'\r\nimport './Autocomplete.css'\r\nimport SelectionList from '../SelectionList'\r\n\r\nexport default function Autocomplete({themeClass}){\r\n    /*\r\n     * REFS\r\n     */\r\n    const inputRef = useRef(null)\r\n    const [listItemRefs, collectListItemRef] = useManyRefs()\r\n\r\n    /*\r\n     * UI EFFECTS\r\n     */\r\n    const [listDisplay, setListDisplay] = useSmartListDisplay(inputRef, listItemRefs)\r\n\r\n    /*\r\n     * ASYNC DATA\r\n     */\r\n    const [predictions, setPredictions] = useState({predictions: []});\r\n\r\n    return (\r\n        <div className={themeClass}>\r\n            <div className=\"autocomplete\">\r\n                <div className=\"input-container\">\r\n                    <input\r\n                        onFocus={() => setListDisplay(true)}\r\n                        placeholder={\"Search Locations\"}\r\n                        type=\"text\"\r\n                        name=\"search_places\"\r\n                        onChange={(e) => {\r\n                            if (e.target.value) {\r\n                                fetchPredictions(setPredictions, e.target.value);\r\n                            } else {\r\n                                setPredictions({predictions: []})\r\n                            }\r\n                        }}\r\n                        ref={inputRef}\r\n                    />\r\n                    <div className={\"searchIcon\"} />\r\n                </div>\r\n                <SelectionList\r\n                    items={predictions['predictions']}\r\n                    shouldDisplay={listDisplay}\r\n                    inputRef={inputRef}\r\n                    exposeRef={collectListItemRef}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n/*\r\n * *************************************\r\n *          ASYNC HELPER - fetch search results\r\n * *************************************\r\n */\r\n\r\nconst fetchPredictions = async (handlePredictions, queryStr) => {\r\n    const res = await fetch(\"https://coding-challenge.echoandapex.com/locations?q=\"+queryStr)\r\n    res .json()\r\n        .then(res => {\r\n            if (res.predictions.length) handlePredictions(res)\r\n        })\r\n        .then(err => {\r\n            if (err) handlePredictions({predictions: []})\r\n        });\r\n}\r\n","import Autocomplete from './Autocomplete'\r\n\r\nexport default Autocomplete;","import React, { useLayoutEffect, useRef, useState } from 'react'\r\n\r\nexport const useManyRefs = () => {\r\n    const refs = useRef([])\r\n    const collectOneRef = (new_ref) => {\r\n        if (!refs.current.includes(new_ref)) refs.current.push(new_ref);\r\n    }\r\n\r\n    return [refs, collectOneRef]\r\n}\r\n\r\nexport const useSmartListDisplay = (inputRef, listItemRefs) => {\r\n\r\n    /*\r\n     * hides list results if user clicks outside of Autocomplete component\r\n     */\r\n\r\n    const [listDisplay, setListDisplay] = useState(false)\r\n\r\n    useLayoutEffect(() => {\r\n        const handleClick = (e) => {\r\n            const listItems = listItemRefs.current.map(ref => ref.current);\r\n            const clickedInput = e.target===inputRef.current,\r\n                  clickedListItem = listItems.includes(e.target),\r\n                  exitClick = !clickedInput && !clickedListItem;\r\n\r\n            if(exitClick){\r\n                e.stopPropagation()\r\n                setListDisplay(false)\r\n            }\r\n        }\r\n        document.addEventListener('click', handleClick)\r\n        window.addEventListener('click', handleClick)\r\n        return (() => {\r\n            document.removeEventListener('click', handleClick)\r\n            window.addEventListener('click', handleClick)\r\n        });\r\n    }, [])\r\n\r\n    return [listDisplay, setListDisplay];\r\n}","/*\r\n * source: https://github.com/d4nyll/lethargy\r\n */\r\n\r\nfunction Lethargy(stability, sensitivity, tolerance, delay) {\r\n    this.stability = stability != null ? Math.abs(stability) : 8;\r\n    this.sensitivity = sensitivity != null ? 1 + Math.abs(sensitivity) : 100;\r\n    this.tolerance = tolerance != null ? 1 + Math.abs(tolerance) : 1.1;\r\n    this.delay = delay != null ? delay : 150;\r\n    this.lastUpDeltas = (function() {\r\n        var i, ref, results;\r\n        results = [];\r\n        for (i = 1, ref = this.stability * 2; 1 <= ref ? i <= ref : i >= ref; 1 <= ref ? i++ : i--) {\r\n        results.push(null);\r\n        }\r\n        return results;\r\n    }).call(this);\r\n    this.lastDownDeltas = (function() {\r\n        var i, ref, results;\r\n        results = [];\r\n        for (i = 1, ref = this.stability * 2; 1 <= ref ? i <= ref : i >= ref; 1 <= ref ? i++ : i--) {\r\n        results.push(null);\r\n        }\r\n        return results;\r\n    }).call(this);\r\n    this.deltasTimestamp = (function() {\r\n        var i, ref, results;\r\n        results = [];\r\n        for (i = 1, ref = this.stability * 2; 1 <= ref ? i <= ref : i >= ref; 1 <= ref ? i++ : i--) {\r\n        results.push(null);\r\n        }\r\n        return results;\r\n    }).call(this);\r\n}\r\n\r\nLethargy.prototype.check = function(e) {\r\n    var lastDelta;\r\n    e = e.originalEvent || e;\r\n    if (e.wheelDelta != null) {\r\n        lastDelta = e.wheelDelta;\r\n    } else if (e.deltaY != null) {\r\n        lastDelta = e.deltaY * -40;\r\n    } else if ((e.detail != null) || e.detail === 0) {\r\n        lastDelta = e.detail * -40;\r\n    }\r\n    this.deltasTimestamp.push(Date.now());\r\n    this.deltasTimestamp.shift();\r\n    if (lastDelta > 0) {\r\n        this.lastUpDeltas.push(lastDelta);\r\n        this.lastUpDeltas.shift();\r\n        return this.isInertia(1);\r\n    } else {\r\n        this.lastDownDeltas.push(lastDelta);\r\n        this.lastDownDeltas.shift();\r\n        return this.isInertia(-1);\r\n    }\r\n    return false;\r\n};\r\n\r\nLethargy.prototype.isInertia = function(direction) {\r\n    var lastDeltas, lastDeltasNew, lastDeltasOld, newAverage, newSum, oldAverage, oldSum;\r\n    lastDeltas = direction === -1 ? this.lastDownDeltas : this.lastUpDeltas;\r\n    if (lastDeltas[0] === null) {\r\n        return direction;\r\n    }\r\n    if (this.deltasTimestamp[(this.stability * 2) - 2] + this.delay > Date.now() && lastDeltas[0] === lastDeltas[(this.stability * 2) - 1]) {\r\n        return false;\r\n    }\r\n    lastDeltasOld = lastDeltas.slice(0, this.stability);\r\n    lastDeltasNew = lastDeltas.slice(this.stability, this.stability * 2);\r\n    oldSum = lastDeltasOld.reduce(function(t, s) {\r\n        return t + s;\r\n    });\r\n    newSum = lastDeltasNew.reduce(function(t, s) {\r\n        return t + s;\r\n    });\r\n    oldAverage = oldSum / lastDeltasOld.length;\r\n    newAverage = newSum / lastDeltasNew.length;\r\n    if (Math.abs(oldAverage) < Math.abs(newAverage * this.tolerance) && (this.sensitivity < Math.abs(newAverage))) {\r\n        return direction;\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n\r\nLethargy.prototype.showLastUpDeltas = function() {\r\n    return this.lastUpDeltas;\r\n};\r\n\r\nLethargy.prototype.showLastDownDeltas = function() {\r\n    return this.lastDownDeltas;\r\n};\r\n\r\nexport default Lethargy;","import React, { useEffect } from 'react';\r\nimport Lethargy from './lethargy'\r\nimport { SOURCES } from './Slider'\r\nimport { forceCheck } from 'react-lazyload'\r\n\r\nconst checkSupportsPassive = () => {\r\n    try {\r\n      let opts = Object.defineProperty({}, 'passive', { get: () => {} } );\r\n      window.addEventListener('test', null, opts);\r\n    } catch (e) {\r\n      console.error(e)\r\n      return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nconst PASSIVE_SUPPORTED = checkSupportsPassive();  // whether the browser supports passive events, for older browsers\r\n\r\n/*\r\n * **********************************************\r\n *                CUSTOM HOOKS\r\n * **********************************************\r\n */\r\n\r\n/***************************************************************\r\n * Update Slider container when user resizes the window\r\n *////////////////////////////////////////////////////////////\r\n\r\nexport function useResize(props, status, setStyles) {\r\n    function disableTransition(){ setStyles({ transition: 'transform 0s' }) }\r\n    let orientation = props.orientation;\r\n\r\n    let windowMeasure = (orientation===`y`) ? window.innerHeight : window.innerWidth,\r\n        dim = (orientation===`y`) ? `height` : `width`;\r\n\r\n    const resize = () => {\r\n        let sideSize = (orientation===`y`) ? status.current.previousSize[0] : status.current.previousSize[1],\r\n            sideDisplacement = windowMeasure - sideSize;\r\n\r\n        status.current.previousSize = [window.innerHeight, window.innerWidth];\r\n\r\n        let translateStr = `translate${orientation}(-${(windowMeasure - sideDisplacement) * (status.current.curPage - 1)}px)`;\r\n\r\n        disableTransition() // disable transition so resize effects are instantaneous\r\n        setStyles({\r\n            transform: translateStr,\r\n            [dim]: `${windowMeasure}px`,\r\n        });\r\n        status.current.resetLinearTranslate()\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', resize, false);\r\n        document.addEventListener('resize', resize, false);\r\n\r\n        resize()\r\n\r\n        return (() => {\r\n        window.removeEventListener('resize', resize, false);\r\n        document.removeEventListener('resize', resize, false);\r\n        });\r\n    })\r\n\r\n    return resize;\r\n}\r\n\r\n/***************************************************************\r\n *           \"used to create all live CSS effects\" (scrolling etc.)\r\n *\r\n * function-generator, similar to a react hook.\r\n *\r\n * hooks into a style-setter that sets styles directly on a ref's\r\n * current object.\r\n *\r\n * ref object should be a react component\r\n *\r\n * setStyles is used to create all live CSS effects\r\n *////////////////////////////////////////////////////////////\r\n\r\nexport function styleApplicator(containerRef) {\r\n    const setStyles = (style) => {\r\n      Object.keys(style).forEach((key) => {\r\n        if (containerRef.current) containerRef.current.style[key] = style[key];\r\n      })\r\n    }\r\n    return setStyles\r\n}\r\n\r\n\r\n/******************\r\n * NAVIGATION EVENTS\r\n */////////////////\r\n\r\nexport function useButtonEvents(props, status, changePage) {\r\n    let buttonIds = props.buttonIds;\r\n\r\n\r\n    const onButtonClick = (e) => {\r\n        if (status.current.isAnimating) return;\r\n        let to;\r\n        try {\r\n            to = e.target.attributes.to.value\r\n        } catch (e) {\r\n            console.error(e)\r\n        }\r\n\r\n        if (to === 'next') changePage((curPage) => curPage+1, status, SOURCES.BUTTON)\r\n        if (to === 'prev') changePage((curPage) => curPage-1, status, SOURCES.BUTTON)\r\n        if (!isNaN(parseInt(to))) changePage(_ => parseInt(to), status, SOURCES.BUTTON)\r\n    }\r\n\r\n    useEffect(() => {\r\n        buttonIds.map(button => {\r\n                    try{\r\n                        document.getElementById(button).addEventListener('click', onButtonClick)\r\n                    } catch (e) {\r\n                        console.error(button, e)\r\n                    }\r\n\r\n        });\r\n        return (() => {\r\n        try {\r\n            buttonIds.map(button => {\r\n                document.getElementById(button.id).removeEventListener('click', onButtonClick)\r\n            });\r\n        } catch (e){ console.error(e) }\r\n        });\r\n    })\r\n}\r\n\r\nexport function useWheelEvent(props, status, changePage) {\r\n    /*\r\n     *  `lethargy` checks for inertia/momentum scrolling\r\n     *\r\n     *  Without this there are hundreds of trailing scroll events\r\n     *  that cause additional page changes.\r\n     *\r\n     *  Huge thank-you to the creators of lethargy.\r\n     *\r\n     *  An alternative method to preventing momentum scrolling\r\n     *  is to detect negative acceleration in scroll movements\r\n     *  and to block page changes when acceleration is negative.\r\n     */\r\n     let lethargy = new Lethargy()\r\n\r\n    let prevTime = new Date().getTime(),\r\n        scrollings = [];\r\n\r\n    const avg = arr => arr.reduce((a, scrolling) => a+scrolling, 0)/arr.length;\r\n\r\n    function onWheel (e) {\r\n        e.stopPropagation();\r\n        let momentumScrolling = !lethargy.check(e) // prevent inertia/momentum scrolling on most track pads\r\n        if( momentumScrolling || !props.wheelEnabled || status.current.isAnimating) return;\r\n\r\n        let curTime = new Date().getTime(),\r\n            dt = curTime - prevTime,\r\n            value = -e.wheelDelta || e.deltaY || e.detail;\r\n\r\n        if (dt > 200) scrollings = [];\r\n        prevTime = curTime;\r\n        scrollings = scrollings.slice(-30).concat([ value ]);\r\n\r\n        const pageSelector = (curPage => (avg(scrollings) > 0) ? curPage+1 : curPage-1)\r\n        changePage(pageSelector, status, SOURCES.WHEEL);\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('wheel', onWheel, PASSIVE_SUPPORTED ? { passive: true } : false);\r\n        return (() => {\r\n        window.removeEventListener('wheel', onWheel, PASSIVE_SUPPORTED ? { passive: true } : false);\r\n        });\r\n    })\r\n}\r\n\r\nexport function useTouchEvent(props, status, changePage, setStyles) {\r\n    let localstatus = {\r\n        reqAnim: null,  // stores requested animation frame\r\n        touchStartPos: 0,  // X or Y position of touch start\r\n        touchMoveDelta: 0,  // delta moved from start of swipe\r\n    }\r\n\r\n    let orientation = props.orientation,\r\n        swipeSensitivity = props.swipeSensitivity,\r\n        windowMeasure = _ => (orientation===`y`) ? window.innerHeight : window.innerWidth\r\n\r\n    /* ***************************************************************************\r\n       * Behavior control\r\n       *  - children give touchswipe priority to parent\r\n       *//////////////////////////////////////////////////////////////////////////\r\n\r\n    const preventSwipe = (touchSwipePhase, e) => {\r\n        let disabled = !props.touchEnabled,\r\n            isAnimating = status.current.isAnimating,\r\n            isInSwipe = (touchSwipePhase==='start') ? status.current.isInSwipe : !status.current.isInSwipe, // this line works but is confusing, requires understanding of touch handlers below\r\n            parentAnimating = props.parentStatus.current.isAnimating;\r\n        return (disabled || isAnimating || isInSwipe || parentAnimating)\r\n    };\r\n\r\n    /* ***************************************************************************\r\n       * page change logic & effects\r\n       *//////////////////////////////////////////////////////////////////////////\r\n\r\n    const resetLinearTranslate = (animate) => {\r\n        const translate = -(windowMeasure() * (status.current.curPage - 1));\r\n        const translateStr = `translate${orientation}(${translate}px)`;\r\n        if (animate) status.current.isAnimating = true;\r\n        setStyles({ transform: translateStr });\r\n        forceCheck() // force lazy-loading sliders to check if slide visibility has changed\r\n    }\r\n\r\n    const handleSwipeEnd = (delta) => {\r\n        if (Math.abs(delta) > swipeSensitivity) {\r\n            let duration = (1.0 - (Math.abs(delta) / windowMeasure())) * props.transDuration\r\n\r\n            if (delta < 0) {\r\n                if (status.current.curPage < status.current.maxPage) {\r\n                    const pageSelector = curPage => curPage+1\r\n                    changePage(pageSelector, status, SOURCES.TOUCH, duration);\r\n                } else {\r\n                    resetLinearTranslate()\r\n                }\r\n            } else {\r\n                if (status.current.curPage > 1) {\r\n                    const pageSelector = curPage => curPage-1\r\n                    changePage(pageSelector, status, SOURCES.TOUCH, duration);\r\n                } else {\r\n                    resetLinearTranslate()\r\n                }\r\n            }\r\n        } else {\r\n            resetLinearTranslate()\r\n        }\r\n        // reset linear translation of all children\r\n        status.current.childStatus.forEach(status => status.current.resetLinearTranslate())\r\n    }\r\n\r\n    const updateTouchMove = () => {\r\n        let translate = -((windowMeasure() * (status.current.curPage - 1)) - localstatus.touchMoveDelta),\r\n            translateStr = `translate${orientation}(${translate}px)`;\r\n        setStyles({ transform: translateStr })\r\n        localstatus.reqAnim = requestAnimationFrame(updateTouchMove)\r\n    }\r\n\r\n    /* ***************************************************************************\r\n       * touch event (touchstart, touchmove, touchend) handlers\r\n       *//////////////////////////////////////////////////////////////////////////\r\n\r\n    const onTouchStart = (e) => {\r\n        if (preventSwipe(\"start\")) {\r\n            resetLinearTranslate();\r\n            return;\r\n        }\r\n        status.current.isInSwipe = true\r\n        localstatus.reqAnim = requestAnimationFrame(updateTouchMove)\r\n        localstatus.touchStartPos = (props.orientation===`y`) ? e.touches[0].clientY : e.touches[0].clientX\r\n    }\r\n\r\n    const onTouchMove = (e) => {\r\n        if (preventSwipe(\"move\")) {\r\n            resetLinearTranslate();\r\n            return;\r\n        }\r\n\r\n        const touchPos = (props.orientation===`y`) ? e.changedTouches[0].clientY : e.changedTouches[0].clientX;\r\n        const newDelta = touchPos - localstatus.touchStartPos;\r\n\r\n        localstatus.touchMoveDelta = newDelta;\r\n    }\r\n\r\n    const onTouchEnd = (e) => {\r\n        cancelAnimationFrame(localstatus.reqAnim)\r\n        localstatus.touchMoveDelta = 0\r\n\r\n        status.current.isInSwipe = false\r\n\r\n        let touchEnd = (props.orientation===`y`) ? e.changedTouches[0].clientY : e.changedTouches[0].clientX,\r\n            delta = touchEnd - localstatus.touchStartPos;\r\n\r\n        if (props.parentStatus.current.isAnimating) {\r\n            console.log(e.changedTouches)//, e.changedTouches);\r\n            resetLinearTranslate();\r\n            return;\r\n        }\r\n\r\n        handleSwipeEnd(delta)\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('touchstart', onTouchStart, PASSIVE_SUPPORTED ? { passive: true } : false);\r\n        document.addEventListener('touchmove', onTouchMove, PASSIVE_SUPPORTED ? { passive: true } : false);\r\n        document.addEventListener('touchend', onTouchEnd, PASSIVE_SUPPORTED ? { passive: true } : false);\r\n        return (() => {\r\n            document.removeEventListener('touchstart', onTouchStart, PASSIVE_SUPPORTED ? { passive: true } : false);\r\n            document.removeEventListener('touchmove', onTouchMove, PASSIVE_SUPPORTED ? { passive: true } : false);\r\n            document.removeEventListener('touchend', onTouchEnd, PASSIVE_SUPPORTED ? { passive: true } : false);\r\n        });\r\n    })\r\n\r\n    return resetLinearTranslate;\r\n}\r\n\r\n\r\n\r\nexport const useChangePage = (props, enableTransition, setStyles) => function changePage(pageSelector, status, source, duration, easing){\r\n\r\n    let p_S = props.parentStatus.current,\r\n        s = status.current,\r\n        nextPage = pageSelector(s.curPage);\r\n\r\n    const turning = {\r\n        to_firstPage: () => (nextPage===1),\r\n        to_lastPage: () => (nextPage===s.maxPage),\r\n        to_a_middlePage: () => (nextPage>1 && nextPage<s.maxPage),\r\n        beyond_pageRange: () => (nextPage<1 || nextPage>s.maxPage),\r\n        decreasing: () => (nextPage < s.curPage),\r\n        increasing: () => (nextPage > s.curPage)\r\n    }\r\n\r\n    const is = {\r\n      a_parentSlider: () => props.layoutIndex === 0,\r\n      a_childSlider: () => props.layoutIndex > 0\r\n    }\r\n\r\n  /*  PARENT SLIDER's RULES\r\n   */\r\n    const prevent_NextPage = _ => {\r\n        // forces wheel navigation to browse incrementally through all slides from low pages to high pages, including slides that contain child sliders\r\n        let increaseNotAllowed = !s.allowNext,\r\n            stopPageTurn = (turning.increasing() && increaseNotAllowed);\r\n\r\n        let childSliderInView = s.childSliderIndices.includes(s.curPage),\r\n            childSliderAnimating = s.childStatus.map(childStatus => childStatus.current.isAnimating).includes(true),\r\n            childSliderActive = childSliderInView || childSliderAnimating;\r\n\r\n        return (childSliderActive && stopPageTurn && source===SOURCES.WHEEL)\r\n    }\r\n    const prevent_PrevPage = _ => {\r\n        // forces wheel navigation to browse incrementally through all slides from low pages to high pages, including slides that contain child sliders\r\n        let decreaseNotAllowed = !s.allowPrev,\r\n            stopPageTurn = (turning.decreasing() && decreaseNotAllowed);\r\n\r\n        let childSliderInView = s.childSliderIndices.includes(s.curPage),\r\n            childSliderAnimating = s.childStatus.map(childStatus => childStatus.current.isAnimating).includes(true),\r\n            childSliderActive = childSliderInView || childSliderAnimating;\r\n\r\n        return (childSliderActive && stopPageTurn && source===SOURCES.WHEEL)\r\n    }\r\n\r\n    const prevent_parent_PageChange = () => (is.a_parentSlider() && (prevent_NextPage() || prevent_PrevPage()) )\r\n\r\n    /*  CHILD-SPECIFIC SLIDER's RULES\r\n   */\r\n    const prevent_child_PageChange = _ => {\r\n        // prevents child sliders from changing pages when out of view or when parent is animating\r\n        let inView = (props.layoutIndex === p_S.curPage),\r\n            parentAnimating = p_S.isAnimating;\r\n        return (is.a_childSlider() && ( !inView || parentAnimating ));\r\n    }\r\n\r\n  /***************************************************************\r\n     * Page-change behavior is negotiated between parent and child\r\n     *\r\n     * Child slider mutates parent slider's `status` objects in order\r\n     * to coordinate ordered, well-defined page turns\r\n     *////////////////////////////////////////////////////////////\r\n\r\n    // child gives priority to parent if parent is already animating by returning early\r\n    if (prevent_child_PageChange()) return;\r\n\r\n    // if the child is allowed to continue they inform the parent of their behavior\r\n    if (turning.beyond_pageRange()) {\r\n      p_S.allowPrev = true;\r\n      p_S.allowNext = true;\r\n    }\r\n    if (turning.to_firstPage()) {\r\n      p_S.allowPrev = true;\r\n      p_S.allowNext = false;\r\n    }\r\n    if (turning.to_a_middlePage()) {\r\n      p_S.allowPrev = false;\r\n    }\r\n    if (turning.to_lastPage()) {\r\n      p_S.allowNext = true;\r\n      p_S.allowPrev = false;\r\n    }\r\n    // parent makes decisions in response to child's behavior\r\n    if (prevent_parent_PageChange()) return;\r\n\r\n\r\n  /***************************************************************\r\n     * Typical page-change behavior is resumed following parent-child negotiations\r\n     *////////////////////////////////////////////////////////////\r\n    if (turning.beyond_pageRange()) return;\r\n\r\n    props.onBeforeScroll(status, props.layoutIndex)\r\n\r\n    s.curPage = nextPage;\r\n\r\n    // all sliders are informed that an animation is occurring (sibling sliders are informed via the parent's status)\r\n    s.isAnimating = true;\r\n    p_S.isAnimating = true;\r\n\r\n    enableTransition(duration, easing);\r\n    setStyles({\r\n        transform: `translate${props.orientation}(-${100*(s.curPage - 1)}${(props.orientation===`y`)?`vh`:`vw`} )`,\r\n    })\r\n    s.updateNavDots(s.curPage)\r\n}","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\n/*\r\n * DESC:\r\n *  Container that fades in / out.\r\n *\r\n */\r\nexport default class FadeContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            visible: true,\r\n            children: props.children,\r\n        }\r\n    }\r\n\r\n    onHide () {\r\n        this.setState({visibility: false})\r\n    }\r\n\r\n    render() {\r\n        const Children = this.state.children\r\n        return (\r\n            <div>\r\n            <Fade out={!this.state.visible}>\r\n                <Children onHide={this.onHide.bind(this)} />\r\n            </Fade>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport const fadeIn = keyframes`\r\n    from {\r\n        opacity: 0;\r\n    }\r\n\r\n    to {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nexport const fadeOut = keyframes`\r\n    from {\r\n        opacity: 1;\r\n    }\r\n\r\n    to {\r\n        opacity: 0;\r\n    }\r\n`;\r\n\r\nexport const Fade = styled.div`\r\n    visibility: ${props => props.out ? 'hidden' : 'visible'};\r\n    animation: ${props => props.out ? fadeOut : fadeIn} 2s linear;\r\n    transition: visibility 2s ease-in;\r\n`;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport './css-loading-spinners.css'\r\n\r\nexport const LoadingSpinner = () => {\r\n    const SpinnerContainer = styled.div`\r\n        display: flex;\r\n        margin-top:10%;\r\n    `;\r\n    return (\r\n        <SpinnerContainer>\r\n            <div className=\"cls-spinner\">\r\n                <div className=\"cls-circle cls-spin\"></div>\r\n            </div>\r\n        </SpinnerContainer>\r\n    )\r\n}\r\n\r\n\r\nexport const ExpandingLoadingSpinner = () => {\r\n    const SpinnerContainer = styled.div`\r\n        display: flex;\r\n        width: 100%;\r\n        height: 100%;\r\n    `;\r\n    return (\r\n        <SpinnerContainer>\r\n            <div className=\"cls-spinner\">\r\n                <div className=\"cls-circle cls-spin\"></div>\r\n            </div>\r\n        </SpinnerContainer>\r\n    )\r\n}","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components';\nimport { Fade } from './FadeContainer';\nimport LazyLoad from 'react-lazyload';\nimport { ExpandingLoadingSpinner as LoadingSpinner } from './LoadingSpinners'\n\nexport const Section = styled.section`\n  position: relative;\n  width: 100%;\n  height: 100%;\n`;\n\nconst ScrollSlide = styled(Section)`\n    display: block;\n    height: 100vh;\n    width: 100vw;\n    overflow: hidden;\n`;\n\nexport const Slide = props => {\n  const children = props.children,\n        className = props.className,\n        style = props.style;\n\n  const Eager = () => (\n    <ScrollSlide className={props.className} style={props.style}>\n      {props.children}\n    </ScrollSlide>\n  );\n\n  const Lazy = () => (\n      <ScrollSlide className={className} style={{...style}}>\n        <LazyLoad\n          unmountIfInvisible={true}\n          resize={true}\n          overflow={true}\n          placeholder={<Section><LoadingSpinner /></Section>}\n          offset={-1}\n          once={props.once}\n        >\n          <Fade>\n              {\n                children\n              }\n          </Fade>\n        </LazyLoad>\n      </ScrollSlide>\n  )\n\n  const Slide = useMemo(() => (props.lazy) ? Lazy : Eager)\n\n  return (\n      <Slide />\n  );\n}\n\nSlide.defaultProps = {\n  lazy: false,\n  once: false,\n}\n\nSlide.propTypes = {\n  lazy: PropTypes.bool,\n  once: PropTypes.bool,\n}","import React, { useRef, useMemo, useEffect } from 'react';\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\nimport { useChangePage, useButtonEvents ,useWheelEvent, useTouchEvent, useResize, styleApplicator } from './effects'\r\nimport { Slide } from './Section'\r\nimport { forceCheck } from 'react-lazyload'\r\n\r\n// mobile compatibility\r\ndocument.ontouchmove = function(ev) {\r\n    ev.preventDefault();\r\n}\r\n\r\nexport const SOURCES = {\r\n  WHEEL: 'wheel',\r\n  TOUCH: 'touch',\r\n  BUTTON: 'button'\r\n}\r\n\r\n/*\r\n *  Uniquely classless implementation of a framework for \"virtual scrolling\" in the form\r\n *  of a sliding-pane layout that accepts mousewheel and touch events.\r\n *\r\n *  Touch event handling inspired by 'react-fully-scrolled', a vertical scrolling component\r\n *  written by an unaffiliated author @giladaya.\r\n *\r\n *  See 'react-fully-scrolled' here: https://github.com/giladaya/react-fully-scrolled\r\n */\r\n\r\n /* **************************************************************************************\r\n  *                          THE STATUS-OBJECT DESIGN PATTERN\r\n  ****************************************************************************************\r\n  * The `status` object is simply a mutable JavaScript object that holds state-like\r\n  * variables that should never cause re-render. It is implemented using the `useRef`\r\n  * react hook.\r\n  *\r\n  *                           ------- IMPORTANT ---------\r\n  * In this design, the `status` object of the top-most parent slider is shared with all\r\n  * children, allowing them to coordinate when PARENT and CHILD sliders are allowed to\r\n  * change their pages. Children also share their status objects with their parent.\r\n  *\r\n  *          THIS INTENTIONALLY VIOLATES REACT'S TOP-DOWN DATA FLOW RULES.\r\n  *\r\n  * This gives us control over the behavior of both parent and child sliders during\r\n  * event handling so we can tune certain behaviors. For instance, we can control\r\n  * wether or not child sliders react to touch input if the parent slider is in motion.\r\n  *///////////////////////////////////////////////////////////////////////////////////////\r\n\r\nexport function Slider(props) {\r\n  /* *************************************\r\n    *           STATE & STATUS\r\n    *//////////////////////////////////////\r\n    let containerEl = useRef(null),\r\n        setStyles = styleApplicator(containerEl);\r\n\r\n\r\n    // `status` is similar to a STATE store, but (a) never causes re-render and (b) is used to share data between hooks, components, etc..\r\n    let status = useRef({\r\n      isAnimating: false, // page change css-transition is occurring\r\n      isInSwipe: false, // touch movement is occurring\r\n\r\n      curPage: props.initialPage,\r\n      maxPage: props.children.length,\r\n\r\n      //indices of children (in props.children) that contain additional slider components\r\n      childSliderIndices: props.children.reduce((acc, child, i) => (child.type === SubSlider) ? acc.concat([i+1]) : acc\r\n      , []),\r\n\r\n      // allowNext and allowPrev are used to coordinate/negotiate nested parent-child page-turn behaviors\r\n      allowNext: true,\r\n      allowPrev: true,\r\n\r\n      // shares its own css style-setter\r\n      styleSetter: setStyles,\r\n\r\n      // tracks most recent previous window size in order to correctly resize/ fit container during the latest window resize\r\n      previousSize: [window.innerHeight, window.innerWidth],\r\n\r\n      // shares its own resize-effect function\r\n      resize: () => {},\r\n\r\n      // shares its own resetLinearTranslate function\r\n      resetLinearTranslate: () => {},\r\n\r\n      // children automatically share their own status with parent slider\r\n      childStatus: [],\r\n\r\n      // shares the ref to its own container div\r\n      containerEl: containerEl,\r\n\r\n      // callback passed from default page navigation indicator dots, called at the end of page change handling\r\n      updateNavDots: () => {}\r\n    })\r\n\r\n\r\n   /* *************************************\r\n    *  PAGE-CHANGE & EVENT HANDLING HOOKS\r\n    *//////////////////////////////////////\r\n\r\n    function enableTransition(dur=props.transDuration, ea=props.easing){ setStyles({ transition: `transform ${dur}s ${ea}` }) }\r\n    function disableTransition(){ setStyles({ transition: 'transform 0s' }) }\r\n\r\n\r\n    const changePage = useChangePage(props, enableTransition, setStyles)\r\n    status.current.resetLinearTranslate = useTouchEvent(props, status, changePage, setStyles)\r\n    status.current.resize = useResize(props, status, setStyles)\r\n    useWheelEvent(props, status, changePage)\r\n    useButtonEvents(props, status, changePage)\r\n\r\n\r\n    function handleTransitionEnd(){\r\n      disableTransition();\r\n      status.current.isAnimating=false;\r\n      props.parentStatus.current.isAnimating = false;  // child mutates parent again\r\n      props.onAfterScroll(status, props.layoutIndex)\r\n      forceCheck() // force all lazy-loading Slides to load if they are currently in view\r\n    }\r\n\r\n  /* **************************************************************************\r\n    *  DATA SHARING (between nested child and parent Slider components)\r\n    *//////////////////////////////////////////////////////////////////////////\r\n      /****************************************************************************\r\n       * Child mutates (Array.push) parent's status.current.childStatus array\r\n       *\r\n       *          by pushing its own `status` ref object to the array\r\n       *///////////////////////////////////////////////////////////////////////////\r\n    props.parentStatus.current.childStatus.push(status)\r\n\r\n      /****************************************************************************\r\n       *                  Parent clones each member of props.children,\r\n       *\r\n       * sharing a its `status` ref object object with each of the child sliders (SubSlider components)\r\n       *///////////////////////////////////////////////////////////////////////////\r\n    let parentStatus = status;\r\n    let activated_children =  React.Children.toArray(props.children).map((child, i) => {\r\n      return !(child.type === SubSlider || child.props.className === 'SubSlider')\r\n        ? child\r\n        : React.cloneElement(child, {parentStatus: parentStatus, layoutIndex: i+1, status: status})\r\n    })\r\n\r\n      /****************************************************************************\r\n       *                       Simultaneously does:\r\n       *\r\n       *  - memoize slider container to prevent unnecessary re-renders/constructions\r\n       *  - mutate children again to adjust styling for horizontal sliders\r\n       *///////////////////////////////////////////////////////////////////////////\r\n\r\n          const Main = () => useMemo(() => {\r\n              const children = activated_children.map((child, i) => {\r\n                      let horizontalTranslate = { position:'absolute',  top:'0px',  transform:`translatex(${i*100}vw)` };\r\n                      // only horizontally translate non-vertical slides\r\n                      let transformedChild = (props.orientation===`y`)\r\n                          ? child\r\n                          : React.cloneElement(child, {\r\n                              style: {\r\n                                ...child.props.style,\r\n                                ...horizontalTranslate\r\n                              },\r\n                            })\r\n                      return transformedChild;\r\n              });\r\n\r\n              return (\r\n                          <div>\r\n                              <div\r\n                                onTransitionEnd={ handleTransitionEnd }\r\n                                ref={ containerEl }\r\n                                style={{ width: '100%', height: `100%`, position: 'fixed', ...props.style }}\r\n                              >\r\n                                  {\r\n                                    children\r\n                                  }\r\n                              </div>\r\n                            <NavigationDots\r\n                              layoutIndex={props.layoutIndex}\r\n                              initialPage={props.initialPage}\r\n                              status={status}\r\n                              shouldDisplay={props.showNavDots}\r\n                              color={props.navDotColor}\r\n                              pos={props.navDotPos}\r\n                            />\r\n                          </div>\r\n              );\r\n          });\r\n\r\n    return <Main />\r\n  };\r\n\r\n  /*\r\n   * **********************************************\r\n   *         DEFAULT PROPS & PROPTYPES\r\n   * **********************************************\r\n   */\r\n\r\n  Slider.defaultProps = {\r\n    showNavDots: true,\r\n    navDotColor: '#fff',\r\n    navDotPos: 'right',\r\n    initialPage: 1,\r\n    buttonIds: [],\r\n    layoutIndex: 0, // default page index of top-level parent Slider\r\n    parentStatus: {\r\n      current: {\r\n        curPage: 0, // default page index of top-level parent Slider\r\n        childSliderIndices: [0], // default page index of top-level parent Slider\r\n        allowPrev: false,\r\n        allowNext: false,\r\n        isInSwipe: false,\r\n        isAnimating: false,\r\n        resize: () => {},\r\n        childStatus: [],\r\n        containerEl: {current:{focus:()=>{}}}\r\n      }\r\n    },\r\n    children: [],\r\n    easing: 'ease-out',\r\n    initialPage: 1,        // 1-based !\r\n    touchEnabled: true,\r\n    wheelEnabled: true,\r\n    onAfterScroll: function () {},\r\n    onBeforeScroll: function () {},\r\n    swipeSensitivity: 100, // how much Y movement there should be to be considered a scroll\r\n    transDuration: 1,    // seconds\r\n    orientation: 'y'\r\n  }\r\n\r\n  Slider.propTypes = {\r\n    navDotColor: PropTypes.string,\r\n    showNavDots: PropTypes.bool,\r\n    navDotPos: PropTypes.string,\r\n    initialPage: PropTypes.number,\r\n    buttonIds: PropTypes.array,\r\n    layoutIndex: PropTypes.number,\r\n    parentStatus: PropTypes.object,\r\n    children: PropTypes.node,\r\n    easing: PropTypes.string,\r\n    initialPage: PropTypes.number,\r\n    touchEnabled: PropTypes.bool,\r\n    wheelEnabled: PropTypes.bool,\r\n    onAfterScroll: PropTypes.func,\r\n    onBeforeScroll: PropTypes.func,\r\n    swipeSensitivity: PropTypes.number,\r\n    transDuration: PropTypes.number, // seconds\r\n    orientation: PropTypes.string\r\n  }\r\n\r\n  /*\r\n   * **********************************************\r\n   *     CHILD SLIDER - A slider that can be nested within a slider\r\n   * **********************************************\r\n   */\r\n\r\nexport function SubSlider(props) {\r\n  const Buttons = props.buttons;\r\n  return (\r\n    <Slide style={{...props.style}}>\r\n      {Buttons ? <Buttons show={props.showButtons} /> : null}\r\n      <Slider\r\n        {...props}\r\n      >\r\n        {props.children}\r\n      </Slider>\r\n    </Slide>\r\n  )\r\n}\r\n\r\n  /*\r\n   * **********************************************\r\n   *     Navigation Dots\r\n   * **********************************************\r\n   */\r\n\r\nexport const NavigationDots = ({\r\n  layoutIndex,\r\n  initialPage,\r\n  orientation,\r\n  status,\r\n  pos,\r\n  shouldDisplay=true,\r\n  color='#fff'\r\n}) => {\r\n  if (!shouldDisplay) return null;\r\n\r\n  let navDotRefs = Array(status.current.maxPage).fill().map(_ => React.createRef()),\r\n      navDotStyleSetters = navDotRefs.map(refObj => styleApplicator(refObj));\r\n\r\n  let prevPage = status.current.curPage;\r\n\r\n  const navCallback = (curPage) => {\r\n    navDotStyleSetters[prevPage-1]({border: `0em solid ${color}`})\r\n    navDotStyleSetters[curPage-1]({border: `0.04em solid ${color}`})\r\n    prevPage = curPage;\r\n  }\r\n\r\n  // set nav dot update callback on parent's status object\r\n  status.current.updateNavDots = navCallback;\r\n\r\n  return (\r\n    <NavDotContainer\r\n      orientation={orientation}\r\n      pos={pos}\r\n    >\r\n      {\r\n        Array(status.current.maxPage).fill().map((_, i) =>\r\n              <NavDot\r\n                ref={navDotRefs[i]}\r\n                key={`dot-${layoutIndex}-${i}`}\r\n                active={initialPage === i+1}\r\n                color={color}\r\n              />\r\n        )\r\n      }\r\n    </NavDotContainer>\r\n  )\r\n}\r\n\r\nconst Dot = styled.div`\r\n  background: ${props => props.color};\r\n  border: ${props => props.active ? '0.04em' : '0em'} solid ${props => props.color};\r\n  border-radius: 50%;\r\n  width: 0.06em;\r\n  height: 0.06em;\r\n  margin: ${props => props.active ? '0.05em' : '0.09em'};\r\n  transition: all 0.2s ease-out;\r\n  &:hover {\r\n    /*\r\n     *   \"!important\" *MUST* be set otherwise the styleApplicator/setStyles\r\n     *    function will set inline styles that override these hover styles.\r\n     */\r\n    border: 0.04em solid ${props => props.color} !important;\r\n    margin: 0.05em !important;\r\n  }\r\n`;\r\n\r\nconst NavDot = React.forwardRef(({active, color}, ref) => (\r\n  <Dot\r\n    ref={ref}\r\n    active={active}\r\n    color={color}\r\n  />\r\n));\r\n\r\nconst NavDotContainer = ({children, pos}) => {\r\n\r\n  let orientation = (pos==='right'||pos=='left') ? 'y' : 'x';\r\n  let baseStyle = {\r\n    position: 'absolute',\r\n    zIndex: '99999999999',\r\n    fontSize: '5em',\r\n    display: 'flex',\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n  }\r\n\r\n  let adaptiveStyle = {\r\n    flexDirection: `${(orientation==='y') ? 'column' : 'row'}`,\r\n\r\n    height: `${(orientation==='y') ? 'auto' : '0.14em'}`,\r\n    width: `${(orientation==='x') ? 'auto' : '0.14em'}`,\r\n\r\n    right: `${(pos===`right`) ? '1%' : 'auto'}`,\r\n    left: `${(pos===`left`) ? '1%' : (orientation==='x') ? '50%' : 'auto'}`,\r\n\r\n    bottom: `${(pos===`bottom`) ? '1%' : 'auto'}`,\r\n    top: `${(pos===`top`) ? '1%' : (orientation==='y') ? '50%' : 'auto'}`,\r\n\r\n    transform: `${(orientation==='x') ? 'translateX(-50%)' : 'auto'}`,\r\n    transform: `${(orientation==='y') ? 'translateY(-50%)' : 'auto'}`,\r\n\r\n  }\r\n\r\n  let style = {...baseStyle, ...adaptiveStyle};\r\n\r\n  return (\r\n    <div style={style} >\r\n        { children }\r\n    </div>\r\n  )\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { Autocomplete } from './Components'\nimport './App.css';\nimport { Slider, Slide } from './Components/react-fullslide'\nimport logo from './logo.svg'\n\nexport default function App() {\n  return (\n    <>\n    <Slider orientation={'x'} navDotPos={'bottom'} transDuration={0.8} navDotColor={'rgba(100, 100, 100, 1)'}>\n      <Slide>\n        <div\n          style={{\n            position: \"relative\",\n            display: 'flex',\n            flexDirection: 'column',\n            height: '100%',\n            width: '100%',\n            background: '#fff',\n          }}\n        >\n\n          <div className=\"message-alert\">\n            Please scroll or <em>swipe to the right</em> to navigate examples.\n          </div>\n\n          <div className=\"logo-box\" />\n\n          <div style={{flex: 1, width: '100%', display: 'flex', flexDirection: 'column', justifyContent: 'flex-start', alignContent: 'center', alignItems: 'center'}}>\n            <Autocomplete themeClass={\"light\"} />\n          </div>\n\n        </div>\n      </Slide>\n      <Slide>\n        <div\n          style={{\n            position: \"relative\",\n            display: 'flex',\n            flexDirection: 'column',\n            height: '100%',\n            width: '100%',\n            background: '#111',\n          }}\n        >\n          <div className=\"logo-box\" />\n          <div style={{flex: 1,  width: '100%', display: 'flex', flexDirection: 'column', justifyContent: 'flex-start', alignContent: 'center', alignItems: 'center'}}>\n            <Autocomplete themeClass={\"dark\"} />\n          </div>\n        </div>\n      </Slide>\n    </Slider>\n    </>\n  );\n}\n\n\n"],"sourceRoot":""}